/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2



/ {
    behaviors {
        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  BSPC |  Q  |  D  |  R  |  W  |  B  |   |  J  |  F   |  U     |  P     |  ;     |  TAB |
// | altab|  A  |  S  |  H  |  T  |  G  |   |  Y  |  N   |  E     |  O     |  I     | BSPC |
// | ESC  |  Z  |  X  |  M  |  C  |  V  |   |  K  |  L   | , or - | . or ' | / or ! | ENTR |
//                    | RSE | CTRL| SHFT|   | SPC | LALT | RSE |
                        bindings = <
   &kp BSPC   &kp Q &kp D &kp R &kp W &kp B   &kp J &kp F  &kp U     &kp P   &kp SEMI &kp TAB
   &mt LWIN LA(TAB)  &kp A &kp S &kp H &kp T &kp G   &kp Y &kp N  &kp E     &kp O   &kp I    &kp BSPC
   &kp ESC   &kp Z &kp X &kp M &kp C &kp V   &kp K &kp L  &gqt MINUS COMMA &gqt SQT DOT &gqt EXCL FSLH &kp ENTER
                  &mo 2 &kp LCTRL &kp LSHFT   &kp SPACE &kp LALT &mo 2
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | LWIN | LFT | DWN |  UP | RGT |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | ESC  |  [  |  ]  |  {  |  }  |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | LWR |     |     |   |     |     |     |
                        bindings = <
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LWIN &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &tog 1  &kp LBKT &kp RBKT &kp LBRC &kp RBRC   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &trans &trans   &trans   &trans  &trans &trans  
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  7  |  8  |  9  |  0  |  -   |
// | LWIN | LFT | DWN |  UP | RGT |  {  |   |  *  |  4  |  5  |  6  |  .  |  +   |
// | LYR1 |  [  |  ]  |  (  |  )  |  }  |   |  /  |  1  |  2  |  3  |  0  |  =   |
//                    | LWR |     |     |   |     |     |     |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp N7  &kp N8 &kp N9 &kp N0 &kp MINUS
   &kp LWIN &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp LBRC     &kp KP_MULTIPLY &kp N4 &kp N5      &kp N6 &kp DOT &kp PLUS
   &tog 1  &kp LBKT &kp RBKT &kp LPAR &kp RPAR &kp RBRC      &kp FSLH &kp N1  &kp N2        &kp N3 &kp N0 &kp EQUAL
                    	    &trans  &trans   &trans   &trans  &trans &trans 
                        >;
                };
        };
};
